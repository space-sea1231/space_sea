#include <iostream>
#include <stdio.h>
#define __Debug

using namespace std;
typedef long long ll;

const int N = 50;
const int M = 3e3 + 10;

int f1[N][N];
int f2[N][N];
int f3[N][N];
bool bucket[M];

signed main() {
  cin.tie(nullptr) -> ios::sync_with_stdio(false);
  for (int i = 1; i <= 40; i++) {
    for (int j = 1; j <= 40; j++) {
      if (j % 3 == 0) {
        if (i > 2) {
          f1[i][j] = f1[i - 1][j] + j;
        }
        else {
          f1[i][j] = f1[i - 1][j] + j / 3;
        }
      }
      else {
        f1[i][j] = f1[i][j - 1] + i / 3;
      }
      bucket[f1[i][j]] = true;      
      #ifdef __Debug
      // printf("f1[%d][%d]=%d\n", i, j, f1[i][j]);
      #endif
    }
  }
  // for (int i = 40; i >= 1; i--) {
  //   for (int j = 40; j >= 1; j--) {
  //     if (j % 3 == 0) {
  //       f1[i][j] += f1[i - 1][j];
  //     }
  //     bucket[f1[i][j]] = true;      
  //     #ifdef __Debug
  //       printf("f1[%d][%d]=%d\n", i, j, f1[i][j]);
  //     #endif
  //   }
  // }
  // for (int i = 1; i <= 40; i++) {
  //   for (int j = 1; j <= 40; j++) {
  //     if (i % 3 == 0) {
  //       if (j > 2) {
  //         f2[i][j] = f2[i][j - 1] + 3;
  //       }
  //       else {
  //         f2[i][j] = f2[i][j - 1] + 1;
  //       }
  //     }
  //     else {
  //       f2[i][j] = f2[i - 1][j] + j / 3;
  //     }
  //     bucket[f2[i][j]] = true;
  //     #ifdef __Debug
  //       // printf("f2[%d][%d]=%d\n", i, j, f2[i][j]);
  //     #endif
  //   }
  // }
  for (int i = 1; i <= 40; i++) {
    for (int j = 1; j <= 40; j++) {
      if (i > 1 && (i - 1) % 4 == 0) {
        if (j > 2) {
          f3[i][j] = f3[i - 5][j] + j * 2 + (j - 2) * 4;
        }
        else {
          f3[i][j] = f3[i - 5][j] + j * 2;
        }
      }
      else {
        if (j % 3 == 0) {
          if (i > 2) {
            f3[i][j] = f3[i - 1][j] + j;
          }
          else {
            f3[i][j] = f3[i - 1][j] + j / 3;
          }
        }
        else {
          f3[i][j] = f3[i][j - 1] + i / 3;
        }
      }
      bucket[f3[i][j]] = true;
      #ifdef __Debug
        printf("f3[%d][%d]=%d\n", i, j, f3[i][j]);
      #endif
    }
  }
  for (int i = 1; i <= 2222; i++) {
    if (bucket[i] == false){
      printf("%d\n", i);
    }
  }
  return 0;
}
/*
n长加宽:
if (m>=2) +=3*n
else +=n

m宽加长:
if (m>=3) +=m+(m-2)*2
else +=m
n,m<=13

123
123
123
123

3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
2222222222222222222222222222222222222222
1111111111111111111111111111111111111111
1231231231231231231231231231231231231231
14：
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1111111111111111111111111111111111111111
2222222222222222222222222222222222222222
3333333333333333333333333333333333333333
1231231231231231231231231231231231231231
*/
/*
1:
123

2:
123
123

3:
123123123

4:
123123
123123

5:
123123123123123

6:
123123123
213123123

7:
123123123123123123123

8:
123123123123
123123123123

9:
123123123123123123123123123

10:
123123123123123
123123123123123

11:
123123123123123123123123123123123

12:
123123123123123123
123123123123123123

13:
123123123123123123123123123123123123123

14:
123123123123123123123
123123123123123123123

15:
123123123
123123123
123123123

16:
123123
123123
123123
123123

17:
1231231231
1231231232
1231231233

25:
123123123123123
123123123123123
123123123123123

22:
123123
123123
123123
123123
123123

n长加宽:
if (m>=2) +=3*n
else +=n

m宽加长:
if (m>=3) +=m+(m-2)*2
else +=m
n,m<=13

1:1+1+2+6+6
123123123
123123123
123123123
123123123
*/